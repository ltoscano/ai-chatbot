services:
  postgres:
    image: postgres:15-alpine
    container_name: ai-chatbot-postgres
    hostname: ai-chatbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_chatbot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ai_chatbot" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - carl_default

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${TARGET_STAGE:-development}
    container_name: ai-chatbot-app
    hostname: ai-chatbot-app
    restart: unless-stopped
    env_file:
      - .env.local
      #environment:
      # Sovrascrive specifiche variabili per Docker
      #- POSTGRES_URL=postgresql://postgres:postgres_password@postgres:5432/ai_chatbot
      #- PROJECTS_URL_SERVER=http://blob-server:8000
      #- NEXT_PUBLIC_UPLOAD_URL=http://blob-server:8000/api/files/upload
    ports:
      - "3000:3000"
    volumes:
      # Mount source code only in development
      - ${PWD}:/app:cached
      - /app/node_modules
      - ai_chatbot_next:/app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - carl_default
    command: ${DOCKER_COMMAND:-npm run dev}

volumes:
  postgres_data:
  ai_chatbot_next:


networks:
  carl_default:
    external: true
    name: carl_default
